<Window x:Class="EVA_Gen.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" mc:Ignorable="d" 
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:ii="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:EVA_Gen.WPF.Views"
        xmlns:cmd="clr-namespace:EVA_Gen.WPF.Infrastructure.Commands" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:beh="clr-namespace:EVA_Gen.WPF.ViewModels"
        xmlns:vm="clr-namespace:EVA_Gen.WPF.ViewModels"   
        Height="450" Width="1200"
        WindowStartupLocation="CenterScreen"
        Title="{Binding Path=Title}">
    <!--Привязка Data Context для отладки-->
    <!--<Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>-->
    <Grid>
        
        <Grid.Resources>

        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="35"></ColumnDefinition>
            <!--<ColumnDefinition Width="*"></ColumnDefinition>--> <!--закомментировать-->
            <ColumnDefinition Width="200"></ColumnDefinition>
            <ColumnDefinition Width="200"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="200"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Vertical" Grid.Row="1">
            <Button Margin="5,10,0,5" Content="+"  Command="{Binding Path=CloseWindowCommand }"></Button>
            <Button Margin="5,5,0,5" Content="-" ></Button>
        </StackPanel>
        
        <TreeView Grid.Row="1" Grid.Column="1" Margin="10" BorderThickness="1" ItemsSource="{Binding Panels}">
            <i:Interaction.Behaviors>
                <vm:BindableSelectedItemBehavior SelectedItem="{Binding SelectedPanel, Mode=TwoWay}" />
            </i:Interaction.Behaviors>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding SubPanels}">
                    <!--<TextBlock Text="{Binding Name}"></TextBlock>-->
                    <DockPanel>
                        <CheckBox IsChecked ="{Binding Path=Is_Checked}" Visibility="{Binding Visibility}" DockPanel.Dock="Left"/>
                        <TextBlock Text="{Binding Name}"/>
                    </DockPanel>
                    <!--<CheckBox Content="{Binding Name}"></CheckBox>-->
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>


        <Button Grid.Column="1" Margin="10" Width="85" Content="Generation" HorizontalAlignment="Left" >
            <Button.Command >
                <cmd:GenCommand/>
            </Button.Command>
            <!--<Button.CommandParameter>
                <Binding Path="Panels" ></Binding>
            </Button.CommandParameter>-->
        </Button>
        <Button Grid.Column="1"  Margin="10" Width="85" Content="Update" HorizontalAlignment="Right"></Button>
        <TextBlock Grid.Column="2" Text="Данные панели:" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>



        <!--AlternatingRowBackground="LightBlue"  полосатые столбцы-->

        <StackPanel Margin=" 10" Grid.Column="3" Grid.ColumnSpan ="2" Grid.Row="1">
            <TextBlock Text="{Binding Path=SelectedPanel.Name, TargetNullValue='Панель не выбрана'}"/>
            <DataGrid ItemsSource="{Binding Path=SelectedPanel.Circuits}" 
                      AutoGenerateColumns="False"
                      HorizontalScrollBarVisibility="Visible"
                      VerticalScrollBarVisibility="Visible" 
                      CanUserAddRows="False"
                      GridLinesVisibility="All" 
                      VerticalGridLinesBrush="DarkGray"
                      HorizontalGridLinesBrush="DarkGray" CanUserSortColumns ="False" SelectionMode="Extended" CanUserResizeColumns="False" CanUserResizeRows="False" SelectionUnit="Cell" >
                
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <TransformGroup>
                                    <RotateTransform Angle="90"></RotateTransform>
                                </TransformGroup>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Width" Value="120"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.LayoutTransform>
                    <TransformGroup>
                        <RotateTransform Angle="-90"></RotateTransform>
                    </TransformGroup>
                </DataGrid.LayoutTransform>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <TransformGroup>
                                    <RotateTransform Angle="90"/>
                                </TransformGroup>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Width" Value="120"/>
                        <!--<Style.Triggers>
                            <Trigger Property="DataGridCell.IsSelected" Value="True">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground"  Value="Black"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>-->
                    </Style>
                </DataGrid.CellStyle>

                <DataGrid.Columns>
                


                   
                    <DataGridTextColumn Header="Ру" Binding="{Binding P_Installed}" Visibility="Visible"></DataGridTextColumn>
                    <DataGridTextColumn Header="Фаза подключения" Binding="{Binding Phase_Connection}" Visibility="Visible"></DataGridTextColumn>
                    <DataGridTextColumn Header="Тип нагрузки" Binding="{Binding Load_Type}"></DataGridTextColumn>
                    <DataGridTextColumn Header="УГО" Binding="{Binding Ugo}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Имя цепи" Binding="{Binding Name}"></DataGridTextColumn>
                    
                    <DataGridTextColumn Header="Марка аппарата 1" Binding="{Binding Device_Mark_1}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Хар-ка срабатывания" Binding="{Binding Device_Curve_1}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Ток аппарата 1" Binding="{Binding Device_I_1}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Тип аппарата 1" Binding="{Binding Device_Type_1}" ></DataGridTextColumn>
                    

                </DataGrid.Columns>
                
            </DataGrid>
        </StackPanel>

        <!--<Button Grid.Column="2" Margin="10" Content="Gen" >
            <Button.Command >
                <cmd:GenCommand/>
            </Button.Command>
            <Button.CommandParameter>
                <Binding Path="Panels" ></Binding>
            </Button.CommandParameter>
        </Button>-->
       
        
    </Grid>
</Window>
